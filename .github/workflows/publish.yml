name: publish crates
on:
  push:
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  publish:
    name: Publish to crates.io
    continue-on-error: false
    runs-on: ubuntu-latest
    environment: release  # Enhanced security with required reviewers
    permissions:
      id-token: write     # Required for OIDC token exchange
      contents: write     # Required for creating tags
    strategy:
      matrix:
        package:
          - generic-bytes
          - generic-bytes-derive
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Check if version already exists
        id: check
        run: |
          set +e
          ./scripts/is_version_already_uploaded.sh ${{ matrix.package }}
          export EXIT_CODE="$?"
          set -e
          if [[ "$EXIT_CODE" == "7" ]]; then
            echo "is_new_version=no" >> $GITHUB_OUTPUT
          elif [[ "$EXIT_CODE" == "0" ]]; then
            echo "is_new_version=yes" >> $GITHUB_OUTPUT
          else
            # Unexpected outcome, indicates a bug.
            exit "$EXIT_CODE"
          fi
          
      - name: Authenticate with crates.io
        if: steps.check.outputs.is_new_version == 'yes'
        uses: rust-lang/crates-io-auth-action@v1
        id: auth
        
      - name: Tag the version
        if: steps.check.outputs.is_new_version == 'yes'
        run: |
          set -euxo pipefail
          export CURRENT_VERSION="$(./scripts/get_current_version.sh ${{ matrix.package }})"
          git tag "${{ matrix.package }}-v$CURRENT_VERSION"
          git push origin "${{ matrix.package }}-v$CURRENT_VERSION"
          
      - name: Publish packages
        if: steps.check.outputs.is_new_version == 'yes'
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
        run: cargo publish -p ${{ matrix.package }}